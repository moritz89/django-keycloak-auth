"""
Django settings for test_site project.

Generated by 'django-admin startproject' using Django 4.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
import sys
from pathlib import Path

# Only enable DebugPy for dev server's second process
TESTING = sys.argv[1:2] == ["test"]
if debugpy_env := os.getenv("DEBUGPY"):
    if debugpy_env not in ["listen", "wait"]:
        raise ValueError("DEBUGPY not valid [listen, wait]")
    elif os.getenv("RUN_MAIN") or TESTING:
        DEBUGPY = debugpy_env
        DEBUGPY_PORT = int(os.getenv("DEBUGPY_PORT", 5678))
    else:
        DEBUGPY = False
else:
    DEBUGPY = False

LOGGING = {
    "version": 1,
    "formatters": {
        "line_scope": {
            "format": f"%(levelname)s | %(name)s.%(funcName)s:%(lineno)s | %(message)s"
        },
    },
    "handlers": {
        "console_line_scope": {
            "class": "logging.StreamHandler",
            "formatter": "line_scope",
        },
    },
    "loggers": {
        "": {
            "handlers": ["console_line_scope"],
            "level": "INFO",
            "propagate": False,
        },
        "django_keycloak": {
            "handlers": ["console_line_scope"],
            "level": os.getenv("DJANGO_LOG_LEVEL", "INFO"),
            "propagate": False,
        },
    },
}


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.append(os.path.abspath(os.path.join(BASE_DIR, "../../src")))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-ep3)qk(t@*3+-f=p9%1q4o0u*vxoaf3)@t)r29t70wpyh+q(%m"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_keycloak",
    "test_app",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_keycloak.middleware.KeycloakMiddleware",
]

ROOT_URLCONF = "test_site.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "test_site.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Authentication
AUTH_USER_MODEL = "django_keycloak.KeycloakUser"

AUTHENTICATION_BACKENDS = ("django_keycloak.backends.KeycloakAuthenticationBackend",)

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# KEYCLOAK

keycloak_server = f"http://{os.getenv('KEYCLOAK_HOST')}:{os.getenv('KEYCLOAK_PORT')}"

KEYCLOAK_CONFIG = {
    "SERVER_URL": keycloak_server,
    "INTERNAL_URL": keycloak_server,
    "BASE_PATH": os.getenv("KEYCLOAK_BASE_PATH"),
    "REALM": os.getenv("KEYCLOAK_REALM"),
    "CLIENT_ID": os.getenv("KEYCLOAK_CLIENT_ID"),
    "CLIENT_SECRET_KEY": os.getenv("KEYCLOAK_CLIENT_SECRET_KEY"),
    "CLIENT_ADMIN_ROLE": "admin",
    "REALM_ADMIN_ROLE": "admin",
    "EXEMPT_URIS": [],
    "DECODE_TOKEN": True,
    "TRACE_DEBUG_LOGS": True,
}
